// <auto-generated />
using System;
using ATS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ATS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220205225003_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("ATS.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CandidateId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("ATS.Models.CandidateCurriculumVitae", b =>
                {
                    b.Property<int>("CandidateId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CandidateId");

                    b.ToTable("CandidateCurriculumVitae");
                });

            modelBuilder.Entity("ATS.Models.JobApplication", b =>
                {
                    b.Property<int>("JobOpeningId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CandidateId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ApplicationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("date('now')");

                    b.HasKey("JobOpeningId", "CandidateId");

                    b.HasIndex("CandidateId");

                    b.ToTable("JobApplication");
                });

            modelBuilder.Entity("ATS.Models.JobOpening", b =>
                {
                    b.Property<int>("JobOpeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("JobOpeningId");

                    b.ToTable("JobOpening");
                });

            modelBuilder.Entity("ATS.Models.CandidateCurriculumVitae", b =>
                {
                    b.HasOne("ATS.Models.Candidate", "Candidate")
                        .WithOne("CandidateCurriculumVitae")
                        .HasForeignKey("ATS.Models.CandidateCurriculumVitae", "CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("ATS.Models.JobApplication", b =>
                {
                    b.HasOne("ATS.Models.Candidate", "Candidate")
                        .WithMany("JobApplications")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ATS.Models.JobOpening", "JobOpening")
                        .WithMany("JobCandidates")
                        .HasForeignKey("JobOpeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("JobOpening");
                });

            modelBuilder.Entity("ATS.Models.Candidate", b =>
                {
                    b.Navigation("CandidateCurriculumVitae");

                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("ATS.Models.JobOpening", b =>
                {
                    b.Navigation("JobCandidates");
                });
#pragma warning restore 612, 618
        }
    }
}
